diff -uNr class_public-2.6.0.old/include/background.h class_public-2.6.0/include/background.h
--- class_public-2.6.0.old/include/background.h	2017-08-15 20:58:01.994440424 -0700
+++ class_public-2.6.0/include/background.h	2017-08-16 01:29:47.705730887 -0700
@@ -128,7 +128,8 @@

   double h; /**< reduced Hubble parameter */
   double age; /**< age in Gyears */
-  double conformal_age; /**< conformal age in Mpc */
+  double conformal_age; /**< conformal age at a_today in Mpc */
+  double conformal_age_amax; /**< conformal age at a_max in Mpc */
   double K; /**< \f$ K \f$: Curvature parameter \f$ K=-\Omega0_k*a_{today}^2*H_0^2\f$; */
   int sgnK; /**< K/|K|: -1, 0 or 1 */
   double * m_ncdm_in_eV; /**< list of ncdm masses in eV (inferred from M_ncdm and other parameters above) */
@@ -144,6 +145,7 @@
   //@{

   double a_today; /**< scale factor today (arbitrary and irrelevant for most purposes) */
+  double a_max; /**< upper limit of scale factor  */

   //@}

diff -uNr class_public-2.6.0.old/source/background.c class_public-2.6.0/source/background.c
--- class_public-2.6.0.old/source/background.c	2017-08-15 20:58:02.457448246 -0700
+++ class_public-2.6.0/source/background.c	2017-08-16 01:53:20.852346459 -0700
@@ -1527,12 +1527,11 @@
   pba->bt_size=0;

   /** - loop over integration steps: call background_functions(), find step size, save data in growTable with gt_add(), perform one step with generic_integrator(), store new value of tau */
-
   while (pvecback_integration[pba->index_bi_a] < pba->a_today) {

     tau_start = tau_end;

-    /* -> find step size (trying to adjust the last step as close as possible to the one needed to reach a=a_today; need not be exact, difference corrected later) */
+    /* -> find step size (trying to adjust the last step as close as possible to the one needed to reach a=a_max; need not be exact, difference corrected later) */
     class_call(background_functions(pba,pvecback_integration, pba->short_info, pvecback),
                pba->error_message,
                pba->error_message);
@@ -1573,13 +1572,62 @@

   }

+  /* do second loop up until a_max if a_max is greater than a_today*/
+  /* explicit second loop preserves a binning up to a_today so results will be identical for a <= a_today */
+  if (pba->a_max > pba->a_today) {
+
+    while (pvecback_integration[pba->index_bi_a] < pba->a_max) {
+
+      tau_start = tau_end;
+
+      /* -> find step size (trying to adjust the last step as close as possible to the one needed to reach a=a_max; need not be exact, difference corrected later) */
+      class_call(background_functions(pba,pvecback_integration, pba->short_info, pvecback),
+                 pba->error_message,
+                 pba->error_message);
+
+      if ((pvecback_integration[pba->index_bi_a]*(1.+ppr->back_integration_stepsize)) < pba->a_max) {
+        tau_end = tau_start + ppr->back_integration_stepsize / (pvecback_integration[pba->index_bi_a]*pvecback[pba->index_bg_H]);
+        /* no possible segmentation fault here: non-zeroness of "a" has been checked in background_functions() */
+      }
+      else {
+        tau_end = tau_start + (pba->a_max/pvecback_integration[pba->index_bi_a]-1.) / (pvecback_integration[pba->index_bi_a]*pvecback[pba->index_bg_H]);
+        /* no possible segmentation fault here: non-zeroness of "a" has been checked in background_functions() */
+      }
+
+      class_test((tau_end-tau_start)/tau_start < ppr->smallest_allowed_variation,
+                 pba->error_message,
+                 "integration step: relative change in time =%e < machine precision : leads either to numerical error or infinite loop",(tau_end-tau_start)/tau_start);
+
+      /* -> save data in growTable */
+      class_call(gt_add(&gTable,_GT_END_,(void *) pvecback_integration,sizeof(double)*pba->bi_size),
+                 gTable.error_message,
+                 pba->error_message);
+      pba->bt_size++;
+
+      /* -> perform one step */
+      class_call(generic_integrator(background_derivs,
+                                    tau_start,
+                                    tau_end,
+                                    pvecback_integration,
+                                    &bpaw,
+                                    ppr->tol_background_integration,
+                                    ppr->smallest_allowed_variation,
+                                    &gi),
+                 gi.error_message,
+                 pba->error_message);
+
+      /* -> store value of tau */
+      pvecback_integration[pba->index_bi_tau]=tau_end;
+
+    }
+  }
+
   /** - save last data in growTable with gt_add() */
   class_call(gt_add(&gTable,_GT_END_,(void *) pvecback_integration,sizeof(double)*pba->bi_size),
              gTable.error_message,
              pba->error_message);
   pba->bt_size++;

-
   /* integration finished */

   /** - clean up generic integrator with cleanup_generic_integrator() */
@@ -1592,13 +1640,41 @@
              gTable.error_message,
              pba->error_message);

-  /** - interpolate to get quantities precisely today with array_interpolate() */
+
+  /** - interpolate to get quantities precisely at a_today with array_interpolate() */
+  class_call(array_interpolate(
+                              pData,
+                              pba->bi_size,
+                              pba->bt_size,
+                              pba->index_bi_a,
+                              pba->a_today,
+                              &last_index,
+                              pvecback_integration,
+                              pba->bi_size,
+                              pba->error_message),
+            pba->error_message,
+            pba->error_message);
+
+  /** - deduce age of the Universe */
+  /* -> age in Gyears */
+  pba->age = pvecback_integration[pba->index_bi_time]/_Gyr_over_Mpc_;
+  /* -> conformal age at a_today in Mpc */
+  pba->conformal_age = pvecback_integration[pba->index_bi_tau];
+  /* -> contribution of decaying dark matter and dark radiation to the critical density today: */
+  if (pba->has_dcdm == _TRUE_){
+    pba->Omega0_dcdm = pvecback_integration[pba->index_bi_rho_dcdm]/pba->H0/pba->H0;
+  }
+  if (pba->has_dr == _TRUE_){
+    pba->Omega0_dr = pvecback_integration[pba->index_bi_rho_dr]/pba->H0/pba->H0;
+  }
+
+  /** - interpolate to get quantities precisely at a_max with array_interpolate() */
   class_call(array_interpolate(
                                pData,
                                pba->bi_size,
                                pba->bt_size,
                                pba->index_bi_a,
-                               pba->a_today,
+                               pba->a_max,
                                &last_index,
                                pvecback_integration,
                                pba->bi_size,
@@ -1610,19 +1686,8 @@
   for (i=0; i<pba->bi_size; i++)
     pData[(pba->bt_size-1)*pba->bi_size+i]=pvecback_integration[i];

-  /** - deduce age of the Universe */
-  /* -> age in Gyears */
-  pba->age = pvecback_integration[pba->index_bi_time]/_Gyr_over_Mpc_;
-  /* -> conformal age in Mpc */
-  pba->conformal_age = pvecback_integration[pba->index_bi_tau];
-  /* -> contribution of decaying dark matter and dark radiation to the critical density today: */
-  if (pba->has_dcdm == _TRUE_){
-    pba->Omega0_dcdm = pvecback_integration[pba->index_bi_rho_dcdm]/pba->H0/pba->H0;
-  }
-  if (pba->has_dr == _TRUE_){
-    pba->Omega0_dr = pvecback_integration[pba->index_bi_rho_dr]/pba->H0/pba->H0;
-  }
-
+  /* -> conformal age at a_max in Mpc */
+  pba->conformal_age_amax = pvecback_integration[pba->index_bi_tau];

   /** - allocate background tables */
   class_alloc(pba->tau_table,pba->bt_size * sizeof(double),pba->error_message);


diff -uNr class_public-2.6.0.old/source/input.c class_public-2.6.0/source/input.c
--- class_public-2.6.0.old/source/input.c	2017-08-15 20:58:02.465448381 -0700
+++ class_public-2.6.0/source/input.c	2017-08-16 01:38:34.511524136 -0700
@@ -602,6 +602,17 @@
   /** - scale factor today (arbitrary) */
   class_read_double("a_today",pba->a_today);

+  /** - scale factor max; same normalization as a_today. */
+  class_call(parser_read_double(pfc,"a_max",&param1,&flag1,errmsg),
+             errmsg,
+             errmsg);
+
+  if (flag1 == _TRUE_) {
+    pba->a_max = param1;
+  } else {
+    pba->a_max = pba->a_today;
+  }
+
   /** - h (dimensionless) and [\f$ H_0/c\f$] in \f$ Mpc^{-1} = h / 2997.9... = h * 10^5 / c \f$ */
   class_call(parser_read_double(pfc,"H0",&param1,&flag1,errmsg),
              errmsg,

diff -uNr class_public-2.6.0.old/source/thermodynamics.c class_public-2.6.0/source/thermodynamics.c
--- class_v2.6.old/source/thermodynamics.c	2017-08-22 13:46:49.000000000 -0400
+++ class_v2.6/source/thermodynamics.c	2017-08-22 20:30:55.000000000 -0400
@@ -2279,6 +2279,7 @@
   double chi_heat;
   int last_index_back;
   double relative_variation;
+  double zend=1./pba->a_max - 1;

   Yp = pth->YHe;

@@ -2367,7 +2368,7 @@
   /* initial step */
   dz = dz_max;

-  while (z > 0.) {
+  while (z > zend) {

     class_test(dz < ppr->smallest_allowed_variation,
                pth->error_message,
@@ -2375,7 +2376,7 @@

     /* - try next step */
     z_next=z-dz;
-    if (z_next < 0.) z_next=0.;
+    if (z_next < zend) z_next=zend;

     class_call(thermodynamics_reionization_function(z_next,pth,preio,&xe_next),
                pth->error_message,
@@ -2660,7 +2661,7 @@
   param.nH0 = 11.223846333047*param.obh2*(1.-param.Y);  /* number density of hydrogen today in m-3 */
   param.fHe = param.Y/(1-param.Y)/3.97153;              /* abundance of helium by number */
   param.zstart = ppr->recfast_z_initial; /* Redshift range */
-  param.zend = 0.;
+  param.zend = 1./pba->a_max - 1.;
   param.dlna = 8.49e-5;
   param.nz = (long) floor(2+log((1.+param.zstart)/(1.+param.zend))/param.dlna);
   param.annihilation = pth->annihilation;
@@ -2799,7 +2800,7 @@

     /** - --> get redshift, corresponding results from hyrec, and background quantities */

-    z = param.zstart * (1. - (double)(i+1) / (double)Nz);
+    z = param.zstart  - (param.zstart - param.zend) * (double)(i+1) / (double)Nz;

     /* get (xe,Tm) by interpolating in pre-computed tables */

@@ -2945,7 +2946,7 @@
   double y[3],dy[3];

   /* other recfast variables */
-  double OmegaB,zinitial,x_He0,x0;
+  double OmegaB,zinitial,zfinal,zend_fuzzy,x_He0,x0;
   double x_H0=0.;
   double z,mu_H,Lalpha,Lalpha_He,DeltaB,DeltaB_He;
   double zstart,zend,rhs;
@@ -2989,6 +2990,9 @@
   /* z_initial */
   zinitial=ppr->recfast_z_initial;

+  /* z_final */
+  zfinal=1./pba->a_max - 1.;
+
   /* H_frac */
   preco->H_frac = ppr->recfast_H_frac;

@@ -3068,8 +3072,8 @@

   for(i=0; i <Nz; i++) {

-    zstart = zinitial * (double)(Nz-i) / (double)Nz;
-    zend   = zinitial * (double)(Nz-i-1) / (double)Nz;
+    zstart = zinitial  - (zinitial-zfinal) * (double)(i) / (double)Nz;
+    zend   = zinitial  - (zinitial-zfinal) * (double)(i+1) / (double)Nz;

     z = zend;

@@ -3224,9 +3228,11 @@
         x_H0 = 0.5*(sqrt(pow(rhs,2)+4.*rhs) - rhs);
       }

+      /* avoids spline bounds check failure due to round-off error when zend=zfinal*/
+      zend_fuzzy = i == Nz-1 ? 0.99999*zend : zend;
       class_call(generic_integrator(thermodynamics_derivs_with_recfast,
                                     zstart,
-                                    zend,
+                                    zend_fuzzy,
                                     y,
                                     &tpaw,
                                     ppr->tol_thermo_integration,
@@ -3264,7 +3270,9 @@
     *(preco->recombination_table+(Nz-i-1)*preco->re_size+preco->index_re_Tb)=y[2];

     /* get dTb/dz=dy[2] */
-    class_call(thermodynamics_derivs_with_recfast(zend, y, dy, &tpaw,pth->error_message),
+    // 0.99999 avoids spline bounds check failure due to round-off error when zend=zfinal
+    zend_fuzzy = i == Nz-1 ? 0.99999*zend : zend;
+    class_call(thermodynamics_derivs_with_recfast(zend_fuzzy, y, dy, &tpaw,pth->error_message),
                pth->error_message,
                pth->error_message);

diff -uNr class_public-2.6.0.old/source/perturbations.c class_public-2.6.0/source/perturbations.c
--- class_v2.6.old/source/perturbations.c	2017-08-22 13:46:49.000000000 -0400
+++ class_v2.6/source/perturbations.c	2017-08-22 20:30:55.000000000 -0400
@@ -1064,7 +1064,8 @@
  last_index_thermo = first_index_thermo;
  tau = tau_ini;

-  while (tau < pba->conformal_age) {
+  /* do calculations up to a=a_max */
+  while (tau < pba->conformal_age_amax) {

    class_call(background_at_tau(pba,
                                 tau,
@@ -1147,7 +1148,7 @@
  last_index_thermo = first_index_thermo;
  tau = tau_ini;

-  while (tau < pba->conformal_age) {
+  while (tau < pba->conformal_age_amax) {

    class_call(background_at_tau(pba,
                                 tau,
@@ -1205,8 +1206,8 @@

  }

-  /** - last sampling point = exactly today */
-  ppt->tau_sampling[counter] = pba->conformal_age;
+  /** - last sampling point = exactly at a_max */
+  ppt->tau_sampling[counter] = pba->conformal_age_amax;

  free(pvecback);
  free(pvecthermo);
